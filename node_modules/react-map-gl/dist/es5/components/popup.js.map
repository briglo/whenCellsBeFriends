{"version":3,"sources":["../../../src/components/popup.js"],"names":["propTypes","Object","assign","BaseControl","className","PropTypes","string","longitude","number","isRequired","latitude","altitude","offsetLeft","offsetTop","tipSize","closeButton","bool","closeOnClick","anchor","oneOf","keys","ANCHOR_POSITION","dynamicPosition","sortByDepth","onClose","func","defaultProps","Popup","evt","props","captureClick","stopPropagation","type","target","forceUpdate","x","y","viewport","_context","content","_contentRef","current","padding","width","height","selfWidth","clientWidth","selfHeight","clientHeight","z","positionType","anchorPosition","style","position","left","top","transform","display","undefined","zIndex","Math","floor","key","borderWidth","children","onClick","eventManager","_onClick","ref","project","_getPosition","containerStyle","_getContainerStyle","_containerRef","_renderTip","_renderContent"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {createElement, createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport {getDynamicPosition, ANCHOR_POSITION} from '../utils/dynamic-position';\n\nimport type {BaseControlProps} from './base-control';\nimport type {PositionType} from '../utils/dynamic-position';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Altitude of the anchor point\n  altitude: PropTypes.number,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number,\n  // Size of the tip\n  tipSize: PropTypes.number,\n  // Whether to show close button\n  closeButton: PropTypes.bool,\n  // Whether to close on click\n  closeOnClick: PropTypes.bool,\n  // The popup's location relative to the coordinate\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  // Whether the popup anchor should be auto-adjusted to fit within the container\n  dynamicPosition: PropTypes.bool,\n  // Whether popups should be sorted by depth. Useful when using multiple popups with tilted map.\n  sortByDepth: PropTypes.bool,\n  // Callback when component is closed\n  onClose: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: () => {}\n});\n\nexport type PopupProps = BaseControlProps & {\n  className: string,\n  longitude: number,\n  latitude: number,\n  altitude: number,\n  offsetLeft: number,\n  offsetTop: number,\n  tipSize: number,\n  closeButton: boolean,\n  closeOnClick: boolean,\n  anchor: PositionType,\n  dynamicPosition: boolean,\n  sortByDepth: boolean,\n  onClose: Function\n};\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the popup's position when the parent re-renders.\n */\nexport default class Popup extends BaseControl<PopupProps, *, HTMLDivElement> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  _closeOnClick: boolean = false;\n  _contentRef: {current: null | HTMLDivElement} = createRef();\n\n  componentDidMount() {\n    super.componentDidMount();\n    // Container just got a size, re-calculate position\n    this.forceUpdate();\n  }\n\n  _getPosition(x: number, y: number): PositionType {\n    const {viewport} = this._context;\n    const {anchor, dynamicPosition, tipSize} = this.props;\n    const content = this._contentRef.current;\n\n    if (content) {\n      return dynamicPosition\n        ? getDynamicPosition({\n            x,\n            y,\n            anchor,\n            padding: tipSize,\n            width: viewport.width,\n            height: viewport.height,\n            selfWidth: content.clientWidth,\n            selfHeight: content.clientHeight\n          })\n        : anchor;\n    }\n\n    return anchor;\n  }\n\n  _getContainerStyle(x: number, y: number, z: number, positionType: PositionType) {\n    const {viewport} = this._context;\n    const {offsetLeft, offsetTop, sortByDepth} = this.props;\n    const anchorPosition = ANCHOR_POSITION[positionType];\n\n    const style = {\n      position: 'absolute',\n      left: x + offsetLeft,\n      top: y + offsetTop,\n      transform: `translate(${-anchorPosition.x * 100}%, ${-anchorPosition.y * 100}%)`,\n      display: undefined,\n      zIndex: undefined\n    };\n\n    if (!sortByDepth) {\n      return style;\n    }\n    if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n      // clipped\n      style.display = 'none';\n    } else {\n      // use z-index to rearrange components\n      style.zIndex = Math.floor(((1 - z) / 2) * 100000);\n    }\n\n    return style;\n  }\n\n  _onClick = evt => {\n    if (this.props.captureClick) {\n      evt.stopPropagation();\n    }\n\n    if (\n      evt.type === 'click' &&\n      (this.props.closeOnClick || evt.target.className === 'mapboxgl-popup-close-button')\n    ) {\n      this.props.onClose();\n    }\n  };\n\n  _renderTip(positionType: PositionType) {\n    const {tipSize} = this.props;\n\n    return createElement('div', {\n      key: 'tip',\n      className: 'mapboxgl-popup-tip',\n      style: {borderWidth: tipSize}\n    });\n  }\n\n  _renderContent() {\n    const {closeButton, children} = this.props;\n    // If eventManager does not exist (using with static map), listen to React event\n    const onClick = this._context.eventManager ? null : this._onClick;\n\n    return createElement(\n      'div',\n      {\n        key: 'content',\n        ref: this._contentRef,\n        className: 'mapboxgl-popup-content',\n        onClick\n      },\n      [\n        closeButton &&\n          createElement(\n            'button',\n            {\n              key: 'close-button',\n              className: 'mapboxgl-popup-close-button',\n              type: 'button'\n            },\n            '×'\n          ),\n        children\n      ]\n    );\n  }\n\n  _render() {\n    const {className, longitude, latitude, altitude} = this.props;\n\n    const [x, y, z] = this._context.viewport.project([longitude, latitude, altitude]);\n\n    const positionType = this._getPosition(x, y);\n    const containerStyle = this._getContainerStyle(x, y, z, positionType);\n\n    return createElement(\n      'div',\n      {\n        className: `mapboxgl-popup mapboxgl-popup-anchor-${positionType} ${className}`,\n        style: containerStyle,\n        ref: this._containerRef\n      },\n      [this._renderTip(positionType), this._renderContent()]\n    );\n  }\n}\n"],"file":"popup.js"}