{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["propTypes","Object","assign","StaticMap","maxZoom","PropTypes","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onDblClick","onContextMenu","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","onMouseOut","onWheel","touchAction","string","clickRadius","interactiveLayerIds","array","getCursor","controller","instanceOf","MapController","getDefaultCursor","isDragging","isHovering","defaultProps","MAPBOX_LIMITS","TransitionManager","onNativeClick","event","preventDefault","InteractiveMap","supported","props","isLoaded","_staticMapRef","current","getMap","geometry","options","map","queryRenderedFeatures","interactionState","state","setState","width","height","_width","_height","_setControllerProps","onResize","viewState","oldViewState","onLoad","callbackName","_normalizeEvent","pointerType","_onEvent","features","_getFeatures","pos","point","radius","Boolean","length","isEntering","isExiting","callbacks","isDoubleClickEnabled","type","push","filter","forEach","cb","_controller","_eventManager","EventManager","_updateInteractiveContext","eventManager","mapContainer","_eventCanvasRef","setElement","on","pointerdown","_onPointerDown","pointermove","_onPointerMove","pointerup","_onPointerUp","pointerleave","bind","click","_onClick","anyclick","dblclick","wheel","contextmenu","nextProps","nextState","isInteractive","_onViewportChange","onStateChange","_onInteractionStateChange","setOptions","queryParams","layers","size","bbox","updatedContext","_interactiveContext","lngLat","offsetCenter","x","y","viewport","WebMercatorViewport","unproject","style","eventCanvasStyle","position","cursor","MapContext","Provider","value","key","ref","_onResize","_onLoad","children","PureComponent"],"mappings":"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","sourcesContent":["// @flow\nimport {PureComponent, createElement, createRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext from './map-context';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport deprecateWarn from '../utils/deprecate-warn';\n\nimport type {ViewState} from '../mapbox/mapbox';\nimport type {StaticMapProps} from './static-map';\nimport type {MjolnirEvent} from 'mjolnir.js';\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.number,\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n  /** Event callbacks */\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** List of layers that are interactive */\n  interactiveLayerIds: PropTypes.array,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controller\n  // The object must expose a method: `setOptions(opts)`\n  controller: PropTypes.instanceOf(MapController)\n});\n\ntype State = {\n  isLoaded: boolean,\n  isDragging: boolean,\n  isHovering: boolean\n};\n\nconst getDefaultCursor = ({isDragging, isHovering}: State) =>\n  isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\nconst defaultProps = Object.assign(\n  {},\n  StaticMap.defaultProps,\n  MAPBOX_LIMITS,\n  TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onNativeClick: null,\n    onHover: null,\n    onContextMenu: (event: MouseEvent) => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n    touchZoom: true,\n    touchRotate: false,\n    keyboard: true,\n\n    touchAction: 'none',\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\ntype InteractionState = {\n  isDragging: boolean\n};\n\ntype MapEvent = MjolnirEvent & {\n  point: Array<number>,\n  lngLat: Array<number>,\n  features: ?Array<any>\n};\n\nexport type InteractiveMapProps = StaticMapProps & {\n  onViewStateChange: Function,\n  onViewportChange: Function,\n  onInteractionStateChange: Function,\n  onHover: Function,\n  onClick: Function,\n  onNativeClick: Function,\n  onDblClick: Function,\n  onContextMenu: Function,\n  onMouseDown: Function,\n  onMouseMove: Function,\n  onMouseUp: Function,\n  onTouchStart: Function,\n  onTouchMove: Function,\n  onTouchEnd: Function,\n  onMouseEnter: Function,\n  onMouseLeave: Function,\n  onMouseOut: Function,\n  onWheel: Function,\n\n  transitionDuration: number,\n  transitionInterpolator: any,\n  transitionInterruption: number,\n  transitionEasing: Function,\n\n  scrollZoom: boolean,\n  dragPan: boolean,\n  dragRotate: boolean,\n  doubleClickZoom: boolean,\n  touchZoom: boolean,\n  touchRotate: boolean,\n  keyboard: boolean,\n\n  touchAction: string,\n  clickRadius: number,\n  interactiveLayerIds: Array<string>,\n  getCursor: Function,\n  controller: MapController\n};\n\nexport default class InteractiveMap extends PureComponent<InteractiveMapProps, State> {\n  static supported() {\n    return StaticMap.supported();\n  }\n\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props: InteractiveMapProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    // If props.controller is not provided, fallback to default MapController instance\n    // Cannot use defaultProps here because it needs to be per map instance\n    this._controller = props.controller || new MapController();\n\n    this._eventManager = new EventManager(null, {\n      touchAction: props.touchAction\n    });\n\n    this._updateInteractiveContext({\n      isDragging: false,\n      eventManager: this._eventManager\n    });\n  }\n\n  state: State = {\n    // Whether mapbox styles have finished loading\n    isLoaded: false,\n    // Whether the cursor is down\n    isDragging: false,\n    // Whether the cursor is over a clickable feature\n    isHovering: false\n  };\n\n  componentDidMount() {\n    const eventManager = this._eventManager;\n\n    const mapContainer = this._eventCanvasRef.current;\n    eventManager.setElement(mapContainer);\n    // Register additional event handlers for click and hover\n    eventManager.on({\n      pointerdown: this._onPointerDown,\n      pointermove: this._onPointerMove,\n      pointerup: this._onPointerUp,\n      pointerleave: this._onEvent.bind(this, 'onMouseOut'),\n      click: this._onClick,\n      anyclick: this._onClick,\n      dblclick: this._onEvent.bind(this, 'onDblClick'),\n      wheel: this._onEvent.bind(this, 'onWheel'),\n      contextmenu: this._onEvent.bind(this, 'onContextMenu')\n    });\n\n    this._setControllerProps(this.props);\n\n    this._updateInteractiveContext({mapContainer});\n  }\n\n  componentWillUpdate(nextProps: InteractiveMapProps, nextState: State) {\n    this._setControllerProps(nextProps);\n\n    if (nextState.isDragging !== this.state.isDragging) {\n      this._updateInteractiveContext({isDragging: nextState.isDragging});\n    }\n  }\n\n  _controller: MapController;\n  _eventManager: any;\n  _interactiveContext: MapContextProps;\n  _width: number = 0;\n  _height: number = 0;\n  _eventCanvasRef: {current: null | HTMLDivElement} = createRef();\n  _staticMapRef: {current: null | StaticMap} = createRef();\n\n  getMap = () => {\n    return this._staticMapRef.current ? this._staticMapRef.current.getMap() : null;\n  };\n\n  queryRenderedFeatures = (geometry: any, options: any = {}) => {\n    const map = this.getMap();\n    return map && map.queryRenderedFeatures(geometry, options);\n  };\n\n  _setControllerProps(props: InteractiveMapProps) {\n    props = Object.assign({}, props, props.viewState, {\n      isInteractive: Boolean(props.onViewStateChange || props.onViewportChange),\n      onViewportChange: this._onViewportChange,\n      onStateChange: this._onInteractionStateChange,\n      eventManager: this._eventManager,\n      width: this._width,\n      height: this._height\n    });\n\n    this._controller.setOptions(props);\n\n    this._updateInteractiveContext({\n      onViewStateChange: props.onViewStateChange,\n      onViewportChange: props.onViewportChange\n    });\n  }\n\n  _getFeatures({pos, radius}: {pos: Array<number>, radius: number}) {\n    let features;\n    const queryParams = {};\n    const map = this.getMap();\n\n    if (this.props.interactiveLayerIds) {\n      queryParams.layers = this.props.interactiveLayerIds;\n    }\n\n    if (radius) {\n      // Radius enables point features, like marker symbols, to be clicked.\n      const size = radius;\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\n      features = map && map.queryRenderedFeatures(bbox, queryParams);\n    } else {\n      features = map && map.queryRenderedFeatures(pos, queryParams);\n    }\n    return features;\n  }\n\n  _onInteractionStateChange = (interactionState: InteractionState) => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== this.state.isDragging) {\n      this.setState({isDragging});\n    }\n\n    const {onInteractionStateChange} = this.props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  };\n\n  _updateInteractiveContext(updatedContext: $Shape<MapContextProps>) {\n    this._interactiveContext = Object.assign({}, this._interactiveContext, updatedContext);\n  }\n\n  _onResize = ({width, height}: {width: number, height: number}) => {\n    this._width = width;\n    this._height = height;\n    this._setControllerProps(this.props);\n    this.props.onResize({width, height});\n  };\n\n  _onViewportChange = (\n    viewState: ViewState,\n    interactionState: InteractionState,\n    oldViewState: ViewState\n  ) => {\n    const {onViewStateChange, onViewportChange} = this.props;\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  };\n\n  /* Generic event handling */\n  _normalizeEvent(event: MapEvent) {\n    if (event.lngLat) {\n      // Already unprojected\n      return event;\n    }\n\n    const {\n      offsetCenter: {x, y}\n    } = event;\n    const pos = [x, y];\n\n    const viewport = new WebMercatorViewport(\n      // $FlowFixMe\n      Object.assign({}, this.props, {\n        width: this._width,\n        height: this._height\n      })\n    );\n\n    event.point = pos;\n    event.lngLat = viewport.unproject(pos);\n\n    return event;\n  }\n\n  _onLoad = (event: MapEvent) => {\n    this.setState({isLoaded: true});\n    this.props.onLoad(event);\n  };\n\n  _onEvent = (callbackName: string, event: MapEvent) => {\n    const func = this.props[callbackName];\n    if (func) {\n      func(this._normalizeEvent(event));\n    }\n  };\n\n  /* Special case event handling */\n  _onPointerDown = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchStart', event);\n        break;\n\n      default:\n        this._onEvent('onMouseDown', event);\n    }\n  };\n\n  _onPointerUp = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchEnd', event);\n        break;\n\n      default:\n        this._onEvent('onMouseUp', event);\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  _onPointerMove = (event: MapEvent) => {\n    switch (event.pointerType) {\n      case 'touch':\n        this._onEvent('onTouchMove', event);\n        break;\n\n      default:\n        this._onEvent('onMouseMove', event);\n    }\n\n    if (!this.state.isDragging) {\n      const {onHover, interactiveLayerIds} = this.props;\n      let features;\n      event = this._normalizeEvent(event);\n      if (this.state.isLoaded && (interactiveLayerIds || onHover)) {\n        features = this._getFeatures({\n          pos: event.point,\n          radius: this.props.clickRadius\n        });\n      }\n      if (onHover) {\n        // backward compatibility: v3 `onHover` interface\n        event.features = features;\n        onHover(event);\n      }\n\n      const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n      const isEntering = isHovering && !this.state.isHovering;\n      const isExiting = !isHovering && this.state.isHovering;\n\n      if (isEntering) {\n        this._onEvent('onMouseEnter', event);\n      }\n      if (isExiting) {\n        this._onEvent('onMouseLeave', event);\n      }\n      if (isEntering || isExiting) {\n        this.setState({isHovering});\n      }\n    }\n  };\n\n  _onClick = (event: MapEvent) => {\n    const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\n    let callbacks = [];\n    const isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n    // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\n    // `click` has a delay period after pointer up that prevents it from firing when\n    // double clicking. `anyclick` is always fired immediately after pointer up.\n    // If double click is turned off by the user, we want to immediately fire the\n    // onClick event. Otherwise, we wait to make sure it's a single click.\n    switch (event.type) {\n      case 'anyclick':\n        callbacks.push(onNativeClick);\n        if (!isDoubleClickEnabled) {\n          callbacks.push(onClick);\n        }\n        break;\n\n      case 'click':\n        if (isDoubleClickEnabled) {\n          callbacks.push(onClick);\n        }\n        break;\n\n      default:\n    }\n\n    callbacks = callbacks.filter(Boolean);\n\n    if (callbacks.length) {\n      event = this._normalizeEvent(event);\n      // backward compatibility: v3 `onClick` interface\n      event.features = this._getFeatures({\n        pos: event.point,\n        radius: this.props.clickRadius\n      });\n      callbacks.forEach(cb => cb(event));\n    }\n  };\n\n  render() {\n    const {width, height, style, getCursor} = this.props;\n\n    const eventCanvasStyle = Object.assign({position: 'relative'}, style, {\n      width,\n      height,\n      cursor: getCursor(this.state)\n    });\n\n    return createElement(\n      MapContext.Provider,\n      {value: this._interactiveContext},\n      createElement(\n        'div',\n        {\n          key: 'event-canvas',\n          ref: this._eventCanvasRef,\n          style: eventCanvasStyle\n        },\n        createElement(\n          StaticMap,\n          Object.assign({}, this.props, {\n            width: '100%',\n            height: '100%',\n            style: null,\n            onResize: this._onResize,\n            onLoad: this._onLoad,\n            ref: this._staticMapRef,\n            children: this.props.children\n          })\n        )\n      )\n    );\n  }\n}\n"],"file":"interactive-map.js"}